#+TITLE: 用户指南: bbm 黑箱模型运行器
#+AUTHOR: Wenping Guo &amp; Roo (AI 助手)
#+LANGUAGE: zh-CN
#+OPTIONS: toc:nil num:nil ^:{} indent:t

* 核心概念：BBM Templates (BloackBox Model)                      :ATTACH:
:PROPERTIES:
:DIR:      data/04f4f22c-c048-49df-aecc-3c2f6dbcf30c
:END:
BBM 首先是一套标准化外部分子计算程序接口, 将计算任务相关的信息都参数到一个标准化的目录结构中, 从而实现了分子结构与计算过程的解耦. 用户使用时, 只需要选择预定义计算模板(目录), 就可直接对一系列分子进行批量计算, 避免了手动为不同计算程序手动生成特定的输入文件(比如 VASP INCAR 等). BBM 在启动时读取用户指定的分子文件, 调用 BBM 目录中定义的计算工作流对分子进行计算, 并收集重要的计算结果(如energy/forces 等)以便于进行多步计算(比如结构优化或结构预测等任务).

#+caption: BBM 计算工作流程示意图
#+name: fig:70844cf1
#+attr_org: :width 600
#+attr_odt: :width 10
[[file:data/04f4f22c-c048-49df-aecc-3c2f6dbcf30c/bbm-model-flow.png]]

其次, BBM 也是一套编程接口. 我们提供了 Rust 和 Python 端的 API 接口, 方便用户使用.

最后 BBM 也是一个静态的绿色可执行程序. 使用 bbm exe 可进行单步计算以测试 BBM 计算模板, 或基于任何自定义 BBM 模板进行多步的结构优化任务.

`bbm` 的核心思想是使用模板来与各种外部计算化学程序进行交互. 这些模板定义了如何:
1.  根据输入的分子结构生成特定程序的输入文件.
2.  执行该计算程序.
3.  从程序的输出文件中解析所需的结果(如能量、力、优化后的结构).

这些预定义的模板集合被称为 BBM Templates，它们通常组织在特定的目录结构中。您可以从以下官方代码库获取预制的模板：
- [[https://github.com/ybyygu/bbm-templates][https://github.com/ybyygu/bbm-templates]]

如何使用模板:
1. 下载或克隆 `bbm-templates` 代码库到您的本地计算机.
2. 在使用 `bbm` 命令时, 通过 `--bbm-dir` 参数指定您想使用的具体模板所在的目录. 例如, 如果 VASP 的静态计算模板位于 `~/apps/vasp/sp`, 则使用 `--bbm-dir ~/apps/vasp/sp`.

`bbm` 会在该目录下查找所需的文件(如输入模板、运行脚本、解析脚本)来执行计算任务. 关于模板的具体结构和如何自定义, 请参考 [[file:../technical-guide/bbm-templates.org][技术指南: BBM 模板详解]].

*注意: 交互模式 (Interactive Mode)*
对于某些计算程序（特别是 VASP），BBM 还支持一种“交互模式”，可以显著提高多步计算（如优化）的效率，因为它避免了重复启动计算进程并能利用上一步的波函数等信息。详情请参考 [[file:../technical-guide/bbm-templates.org][BBM 模板详解]] 中关于 Interactive Mode 的部分。

* 基本用法
`bbm` 命令的基本语法如下：

#+BEGIN_SRC bash
bbm <输入分子文件> --bbm-dir <模板目录> [选项...]
#+END_SRC

- `<输入分子文件>`: 包含一个或多个分子结构的输入文件, 例如 `molecule.xyz` (xyz 可包含多个结构).
- `--bbm-dir <模板目录>`: 指向包含特定计算任务模板文件的目录. 这是必需的参数. (简写: `-t`)
- `[选项...]`: 其他可选参数, 用于控制计算模式、优化、输出等.

* 如何使用 BBM 来优化结构?

`bbm` 提供了两种主要的方式来进行几何结构优化：

1.  使用外部程序自身的优化算法:
    - 这种方式依赖于您选择的 BBM 模板本身就是配置为执行结构优化的（例如，VASP 模板设置了 `IBRION=1` 或 `2`，Gaussian 模板使用了 `Opt` 关键词）。
    - 您只需像运行单点计算一样调用 `bbm`，但指向一个配置为优化的模板目录。
    - 示例 (使用 SISETA 优化模板):
      #+BEGIN_SRC bash
      # 假设 /share/apps/siesta/opt 是一个配置为优化的 SIESTA 模板
      bbm input.cif -t /share/apps/siesta/opt -v -o siesta-opt.cif
      #+END_SRC
    - 这种方法的优点是可以使用外部程序成熟且可能更高效的优化算法。缺点是优化过程完全由外部程序控制，`bbm` 只负责启动和收集最终结果。

2.  使用 `bbm` 内置的优化算法 (Damped LBFGS):
    - 这种方式使用 `bbm` 命令行参数 `--opt` 来启用内置的 LBFGS 优化器。
    - 您需要提供一个能够计算单点能和力的 BBM 模板（例如，一个 `sp` 模板）。`bbm` 会在每个优化步骤调用这个模板来获取力和能量，然后根据这些信息更新结构。
    - 示例 (使用 SIESTA 单点能/力模板进行优化):
      #+BEGIN_SRC bash
      # 假设 /share/apps/siesta/sp 是一个计算单点能/力的 SIESTA 模板
      bbm POSCAR -t /share/apps/siesta/sp --opt --fmax=0.05 --nmax=500 -o final.poscar --chk-file opt_run.db
      #+END_SRC
    - 这种方法的优点是：
      - 优化算法独立于外部程序，更换外部程序（只要有对应的 `sp` 模板）不需要改变优化逻辑。
      - 可以利用 `bbm` 的检查点机制 (`--chk-file`) 来保存和恢复优化过程。
      - 可以通过 `--fmax` 和 `--nmax` 精确控制收敛标准和最大步数。
    - 缺点是 LBFGS 对于某些体系可能不如外部程序自带的优化算法高效。

根据您的具体需求和模板的可用性，可以选择适合的方式进行结构优化。

* 命令行选项详解
以下是 `bbm` 的常用命令行选项：

- =<molfile>= (必需): 输入的分子文件名.
- =--bbm-dir <目录>= (必需): 指定包含 BBM 模板文件的目录路径. (简写: `-t`)
- =-b, --bunch=: 批处理模式. 如果输入文件包含多个分子结构, 此选项会让 `bbm` 尝试为所有结构一次性生成输入并执行计算(需要计算模板支持), 以简化 IO, 加速小任务的批量计算. 如果模板不支持批处理或未指定此选项, `bbm` 会逐个处理文件中的每个分子.

- =--dry-run=: 空跑模式. `bbm` 只会根据模板生成外部程序的输入文件(并打印到标准输出), 但不会实际执行计算. 这对于调试模板或检查生成的输入文件非常有用.
  #+BEGIN_SRC bash
  bbm molecule.xyz -t path/to/template --dry-run
  #+END_SRC

- =--keep=: 保留临时文件. 默认情况下, `bbm` 在计算成功完成后会清理运行过程中产生的临时文件(位于特定的 scratch 目录). 使用此选项可以阻止清理, 方便后续检查. 如果计算失败, 临时文件通常也会被保留.

- =--opt=: 进行几何优化 (使用内置 LBFGS). 需要提供能计算能量和力的模板. 不能与 `--bunch` 同时使用.

- =--fmax <值>= (与 =--opt= 配合使用): 设置几何优化的收敛判据(最大力分量), 单位通常是 eV/Å. 默认值为 `0.1`.

- =--nmax <值>= (与 =--opt= 配合使用): 设置几何优化的最大迭代步数. 默认值为 `50`.

- =-o, --output <文件名>=: 将计算得到的最终分子结构(如果是优化任务, 则是优化后的结构)保存到指定的文件. 文件名后缀决定了输出格式.

- =--chk-file <文件名>=: (检查点选项) 指定用于保存或读取检查点数据的数据库文件。用于记录优化步骤或单点计算结果。
  #+BEGIN_SRC bash
  # 运行单点计算并将结果存入 bbm.db
  bbm -t single-point-bbm-dir list-mols.cif -vv --chk-file bbm.db
  #+END_SRC

- =-v, --verbose= / =-q, --quiet=: 控制日志输出的详细程度. 多次使用 `-v` 会增加详细程度.

* 检查点 (Checkpoint) 机制
`bbm` 可以利用检查点来保存计算过程中的重要信息, 特别是对于耗时较长的几何优化任务.
- 当进行优化 (`--opt`) 时, 如果指定了检查点文件 (例如 `--chk-file bbm.db`), `bbm` (通过 `gosh_optim`) 会在每次优化步骤后将当前的能量、力、结构等信息记录到检查点文件中.
- 如果优化中断, 下次使用相同的命令和检查点文件运行时, 优化可以从上次中断的地方继续, 而不是从头开始.
- 对于非优化任务(单点计算), 检查点主要用于记录最终的计算结果(能量、结构等). 后续可以使用 `gosh load-chk` 命令从检查点文件中加载特定步骤或最终的分子结构.

示例:
#+BEGIN_SRC bash
# 运行优化, 并将每一步记录到 opt.chk
bbm structure.xyz -t path/to/gaussian/opt --opt --chk-file opt.chk --output final.xyz

# 如果中断, 可以再次运行相同命令以恢复优化
bbm structure.xyz -t path/to/gaussian/opt --opt --chk-file opt.chk --output final.xyz
#+END_SRC
